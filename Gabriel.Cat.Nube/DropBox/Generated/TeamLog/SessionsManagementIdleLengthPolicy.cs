// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The sessions management idle length policy object</para>
    /// </summary>
    public class SessionsManagementIdleLengthPolicy
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SessionsManagementIdleLengthPolicy> Encoder = new SessionsManagementIdleLengthPolicyEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SessionsManagementIdleLengthPolicy> Decoder = new SessionsManagementIdleLengthPolicyDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see
        /// cref="SessionsManagementIdleLengthPolicy" /> class.</para>
        /// </summary>
        public SessionsManagementIdleLengthPolicy()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is None</para>
        /// </summary>
        public bool IsNone
        {
            get
            {
                return this is None;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a None, or <c>null</c>.</para>
        /// </summary>
        public None AsNone
        {
            get
            {
                return this as None;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Minute10</para>
        /// </summary>
        public bool IsMinute10
        {
            get
            {
                return this is Minute10;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Minute10, or <c>null</c>.</para>
        /// </summary>
        public Minute10 AsMinute10
        {
            get
            {
                return this as Minute10;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Minute30</para>
        /// </summary>
        public bool IsMinute30
        {
            get
            {
                return this is Minute30;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Minute30, or <c>null</c>.</para>
        /// </summary>
        public Minute30 AsMinute30
        {
            get
            {
                return this as Minute30;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Hour1</para>
        /// </summary>
        public bool IsHour1
        {
            get
            {
                return this is Hour1;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Hour1, or <c>null</c>.</para>
        /// </summary>
        public Hour1 AsHour1
        {
            get
            {
                return this as Hour1;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Hour8</para>
        /// </summary>
        public bool IsHour8
        {
            get
            {
                return this is Hour8;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Hour8, or <c>null</c>.</para>
        /// </summary>
        public Hour8 AsHour8
        {
            get
            {
                return this as Hour8;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Hour24</para>
        /// </summary>
        public bool IsHour24
        {
            get
            {
                return this is Hour24;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Hour24, or <c>null</c>.</para>
        /// </summary>
        public Hour24 AsHour24
        {
            get
            {
                return this as Hour24;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Hour48</para>
        /// </summary>
        public bool IsHour48
        {
            get
            {
                return this is Hour48;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Hour48, or <c>null</c>.</para>
        /// </summary>
        public Hour48 AsHour48
        {
            get
            {
                return this as Hour48;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SessionsManagementIdleLengthPolicy" />.</para>
        /// </summary>
        private class SessionsManagementIdleLengthPolicyEncoder : enc.StructEncoder<SessionsManagementIdleLengthPolicy>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SessionsManagementIdleLengthPolicy value, enc.IJsonWriter writer)
            {
                if (value is None)
                {
                    WriteProperty(".tag", "none", writer, enc.StringEncoder.Instance);
                    None.Encoder.EncodeFields((None)value, writer);
                    return;
                }
                if (value is Minute10)
                {
                    WriteProperty(".tag", "minute_10", writer, enc.StringEncoder.Instance);
                    Minute10.Encoder.EncodeFields((Minute10)value, writer);
                    return;
                }
                if (value is Minute30)
                {
                    WriteProperty(".tag", "minute_30", writer, enc.StringEncoder.Instance);
                    Minute30.Encoder.EncodeFields((Minute30)value, writer);
                    return;
                }
                if (value is Hour1)
                {
                    WriteProperty(".tag", "hour_1", writer, enc.StringEncoder.Instance);
                    Hour1.Encoder.EncodeFields((Hour1)value, writer);
                    return;
                }
                if (value is Hour8)
                {
                    WriteProperty(".tag", "hour_8", writer, enc.StringEncoder.Instance);
                    Hour8.Encoder.EncodeFields((Hour8)value, writer);
                    return;
                }
                if (value is Hour24)
                {
                    WriteProperty(".tag", "hour_24", writer, enc.StringEncoder.Instance);
                    Hour24.Encoder.EncodeFields((Hour24)value, writer);
                    return;
                }
                if (value is Hour48)
                {
                    WriteProperty(".tag", "hour_48", writer, enc.StringEncoder.Instance);
                    Hour48.Encoder.EncodeFields((Hour48)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SessionsManagementIdleLengthPolicy" />.</para>
        /// </summary>
        private class SessionsManagementIdleLengthPolicyDecoder : enc.UnionDecoder<SessionsManagementIdleLengthPolicy>
        {
            /// <summary>
            /// <para>Create a new instance of type <see
            /// cref="SessionsManagementIdleLengthPolicy" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SessionsManagementIdleLengthPolicy Create()
            {
                return new SessionsManagementIdleLengthPolicy();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SessionsManagementIdleLengthPolicy Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "none":
                        return None.Decoder.DecodeFields(reader);
                    case "minute_10":
                        return Minute10.Decoder.DecodeFields(reader);
                    case "minute_30":
                        return Minute30.Decoder.DecodeFields(reader);
                    case "hour_1":
                        return Hour1.Decoder.DecodeFields(reader);
                    case "hour_8":
                        return Hour8.Decoder.DecodeFields(reader);
                    case "hour_24":
                        return Hour24.Decoder.DecodeFields(reader);
                    case "hour_48":
                        return Hour48.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The none object</para>
        /// </summary>
        public sealed class None : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<None> Encoder = new NoneEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<None> Decoder = new NoneDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="None" /> class.</para>
            /// </summary>
            private None()
            {
            }

            /// <summary>
            /// <para>A singleton instance of None</para>
            /// </summary>
            public static readonly None Instance = new None();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="None" />.</para>
            /// </summary>
            private class NoneEncoder : enc.StructEncoder<None>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(None value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="None" />.</para>
            /// </summary>
            private class NoneDecoder : enc.StructDecoder<None>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="None" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override None Create()
                {
                    return None.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The minute 10 object</para>
        /// </summary>
        public sealed class Minute10 : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Minute10> Encoder = new Minute10Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Minute10> Decoder = new Minute10Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Minute10" /> class.</para>
            /// </summary>
            private Minute10()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Minute10</para>
            /// </summary>
            public static readonly Minute10 Instance = new Minute10();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Minute10" />.</para>
            /// </summary>
            private class Minute10Encoder : enc.StructEncoder<Minute10>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Minute10 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Minute10" />.</para>
            /// </summary>
            private class Minute10Decoder : enc.StructDecoder<Minute10>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Minute10" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Minute10 Create()
                {
                    return Minute10.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The minute 30 object</para>
        /// </summary>
        public sealed class Minute30 : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Minute30> Encoder = new Minute30Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Minute30> Decoder = new Minute30Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Minute30" /> class.</para>
            /// </summary>
            private Minute30()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Minute30</para>
            /// </summary>
            public static readonly Minute30 Instance = new Minute30();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Minute30" />.</para>
            /// </summary>
            private class Minute30Encoder : enc.StructEncoder<Minute30>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Minute30 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Minute30" />.</para>
            /// </summary>
            private class Minute30Decoder : enc.StructDecoder<Minute30>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Minute30" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Minute30 Create()
                {
                    return Minute30.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The hour 1 object</para>
        /// </summary>
        public sealed class Hour1 : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Hour1> Encoder = new Hour1Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Hour1> Decoder = new Hour1Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Hour1" /> class.</para>
            /// </summary>
            private Hour1()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Hour1</para>
            /// </summary>
            public static readonly Hour1 Instance = new Hour1();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Hour1" />.</para>
            /// </summary>
            private class Hour1Encoder : enc.StructEncoder<Hour1>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Hour1 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Hour1" />.</para>
            /// </summary>
            private class Hour1Decoder : enc.StructDecoder<Hour1>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Hour1" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Hour1 Create()
                {
                    return Hour1.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The hour 8 object</para>
        /// </summary>
        public sealed class Hour8 : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Hour8> Encoder = new Hour8Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Hour8> Decoder = new Hour8Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Hour8" /> class.</para>
            /// </summary>
            private Hour8()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Hour8</para>
            /// </summary>
            public static readonly Hour8 Instance = new Hour8();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Hour8" />.</para>
            /// </summary>
            private class Hour8Encoder : enc.StructEncoder<Hour8>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Hour8 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Hour8" />.</para>
            /// </summary>
            private class Hour8Decoder : enc.StructDecoder<Hour8>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Hour8" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Hour8 Create()
                {
                    return Hour8.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The hour 24 object</para>
        /// </summary>
        public sealed class Hour24 : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Hour24> Encoder = new Hour24Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Hour24> Decoder = new Hour24Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Hour24" /> class.</para>
            /// </summary>
            private Hour24()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Hour24</para>
            /// </summary>
            public static readonly Hour24 Instance = new Hour24();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Hour24" />.</para>
            /// </summary>
            private class Hour24Encoder : enc.StructEncoder<Hour24>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Hour24 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Hour24" />.</para>
            /// </summary>
            private class Hour24Decoder : enc.StructDecoder<Hour24>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Hour24" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Hour24 Create()
                {
                    return Hour24.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The hour 48 object</para>
        /// </summary>
        public sealed class Hour48 : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Hour48> Encoder = new Hour48Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Hour48> Decoder = new Hour48Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Hour48" /> class.</para>
            /// </summary>
            private Hour48()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Hour48</para>
            /// </summary>
            public static readonly Hour48 Instance = new Hour48();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Hour48" />.</para>
            /// </summary>
            private class Hour48Encoder : enc.StructEncoder<Hour48>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Hour48 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Hour48" />.</para>
            /// </summary>
            private class Hour48Decoder : enc.StructDecoder<Hour48>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Hour48" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Hour48 Create()
                {
                    return Hour48.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : SessionsManagementIdleLengthPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The get team events result object</para>
    /// </summary>
    public class GetTeamEventsResult
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<GetTeamEventsResult> Encoder = new GetTeamEventsResultEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<GetTeamEventsResult> Decoder = new GetTeamEventsResultDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GetTeamEventsResult" />
        /// class.</para>
        /// </summary>
        /// <param name="events">List of events.</param>
        /// <param name="cursor">Pass the cursor into <see
        /// cref="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync" /> to
        /// obtain additional events.</param>
        /// <param name="hasMore">Is true if there are additional events that have not been
        /// returned yet. An additional call to <see
        /// cref="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync" /> can
        /// retrieve them.</param>
        public GetTeamEventsResult(col.IEnumerable<TeamEvent> events,
                                   string cursor,
                                   bool hasMore)
        {
            var eventsList = enc.Util.ToList(events);

            if (events == null)
            {
                throw new sys.ArgumentNullException("events");
            }

            if (cursor == null)
            {
                throw new sys.ArgumentNullException("cursor");
            }

            this.Events = eventsList;
            this.Cursor = cursor;
            this.HasMore = hasMore;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GetTeamEventsResult" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public GetTeamEventsResult()
        {
        }

        /// <summary>
        /// <para>List of events.</para>
        /// </summary>
        public col.IList<TeamEvent> Events { get; protected set; }

        /// <summary>
        /// <para>Pass the cursor into <see
        /// cref="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync" /> to
        /// obtain additional events.</para>
        /// </summary>
        public string Cursor { get; protected set; }

        /// <summary>
        /// <para>Is true if there are additional events that have not been returned yet. An
        /// additional call to <see
        /// cref="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync" /> can
        /// retrieve them.</para>
        /// </summary>
        public bool HasMore { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="GetTeamEventsResult" />.</para>
        /// </summary>
        private class GetTeamEventsResultEncoder : enc.StructEncoder<GetTeamEventsResult>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(GetTeamEventsResult value, enc.IJsonWriter writer)
            {
                WriteListProperty("events", value.Events, writer, global::Dropbox.Api.TeamLog.TeamEvent.Encoder);
                WriteProperty("cursor", value.Cursor, writer, enc.StringEncoder.Instance);
                WriteProperty("has_more", value.HasMore, writer, enc.BooleanEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="GetTeamEventsResult" />.</para>
        /// </summary>
        private class GetTeamEventsResultDecoder : enc.StructDecoder<GetTeamEventsResult>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="GetTeamEventsResult" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override GetTeamEventsResult Create()
            {
                return new GetTeamEventsResult();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(GetTeamEventsResult value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "events":
                        value.Events = ReadList<TeamEvent>(reader, global::Dropbox.Api.TeamLog.TeamEvent.Decoder);
                        break;
                    case "cursor":
                        value.Cursor = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "has_more":
                        value.HasMore = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

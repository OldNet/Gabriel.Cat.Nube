// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The team folder status object</para>
    /// </summary>
    public class TeamFolderStatus
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TeamFolderStatus> Encoder = new TeamFolderStatusEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TeamFolderStatus> Decoder = new TeamFolderStatusDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamFolderStatus" />
        /// class.</para>
        /// </summary>
        public TeamFolderStatus()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Archive</para>
        /// </summary>
        public bool IsArchive
        {
            get
            {
                return this is Archive;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Archive, or <c>null</c>.</para>
        /// </summary>
        public Archive AsArchive
        {
            get
            {
                return this as Archive;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Unarchive</para>
        /// </summary>
        public bool IsUnarchive
        {
            get
            {
                return this is Unarchive;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Unarchive, or <c>null</c>.</para>
        /// </summary>
        public Unarchive AsUnarchive
        {
            get
            {
                return this as Unarchive;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TeamFolderStatus" />.</para>
        /// </summary>
        private class TeamFolderStatusEncoder : enc.StructEncoder<TeamFolderStatus>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TeamFolderStatus value, enc.IJsonWriter writer)
            {
                if (value is Archive)
                {
                    WriteProperty(".tag", "archive", writer, enc.StringEncoder.Instance);
                    Archive.Encoder.EncodeFields((Archive)value, writer);
                    return;
                }
                if (value is Unarchive)
                {
                    WriteProperty(".tag", "unarchive", writer, enc.StringEncoder.Instance);
                    Unarchive.Encoder.EncodeFields((Unarchive)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TeamFolderStatus" />.</para>
        /// </summary>
        private class TeamFolderStatusDecoder : enc.UnionDecoder<TeamFolderStatus>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TeamFolderStatus" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TeamFolderStatus Create()
            {
                return new TeamFolderStatus();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override TeamFolderStatus Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "archive":
                        return Archive.Decoder.DecodeFields(reader);
                    case "unarchive":
                        return Unarchive.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The archive object</para>
        /// </summary>
        public sealed class Archive : TeamFolderStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Archive> Encoder = new ArchiveEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Archive> Decoder = new ArchiveDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Archive" /> class.</para>
            /// </summary>
            private Archive()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Archive</para>
            /// </summary>
            public static readonly Archive Instance = new Archive();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Archive" />.</para>
            /// </summary>
            private class ArchiveEncoder : enc.StructEncoder<Archive>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Archive value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Archive" />.</para>
            /// </summary>
            private class ArchiveDecoder : enc.StructDecoder<Archive>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Archive" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Archive Create()
                {
                    return Archive.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The unarchive object</para>
        /// </summary>
        public sealed class Unarchive : TeamFolderStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Unarchive> Encoder = new UnarchiveEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Unarchive> Decoder = new UnarchiveDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Unarchive" /> class.</para>
            /// </summary>
            private Unarchive()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Unarchive</para>
            /// </summary>
            public static readonly Unarchive Instance = new Unarchive();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Unarchive" />.</para>
            /// </summary>
            private class UnarchiveEncoder : enc.StructEncoder<Unarchive>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Unarchive value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Unarchive" />.</para>
            /// </summary>
            private class UnarchiveDecoder : enc.StructDecoder<Unarchive>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Unarchive" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Unarchive Create()
                {
                    return Unarchive.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : TeamFolderStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
